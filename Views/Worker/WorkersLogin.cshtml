@using LVTS.ViewModels.Worker
@model WorkersLoginViewModel;

@{
    ViewData["Title"] = "Login";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="container">
    <div class="form-box">
        <h2 class="text-center mb-4">Login</h2>
        <form asp-action="WorkersLogin" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="mb-3">
                    <label asp-for="Email" class="form-label"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <label asp-for="Password" class="form-label"></label>
                    <input asp-for="Password" class="form-control" />
                    <span asp-validation-for="Password" class="text-danger"></span>
                </div>
                <div class="float-end">
                    <a asp-controller="Worker" asp-action="WorkersVerifyEmail" class="text-decoration-none">Forgot Password?</a>
                </div>
                <div class="form-check mb-3">
                    <label class="form-check-label">
                        <input asp-for="RememberMe" class="form-check-input"/>
                        @Html.DisplayNameFor(a => a.RememberMe)
                    </label>
                </div>
                <input type="submit" value="Login" class="btn btn-success w-100 p-2" />
                <div class="text-center">
                    <a asp-controller="Home" asp-action="Index" class="text-decoration-none mt-3">Back</a>
                </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial.cshtml");
    }
}